{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","setModal","className","map","todo","id","classNames","completed","title","type","onClick","TodoFilter","onSettingTodo","useState","query","setQuery","lowerQuery","toLowerCase","useEffect","filter","includes","onChange","target","value","placeholder","style","pointerEvents","Loader","TodoModal","selectedTodo","selectedUser","onSelectTodo","setSelectedUser","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","setTodos","todosToShow","setTodosToShow","modal","showTodos","userId","currentTodos","user","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38af3ac0.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n  setModal: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todos, setSelectedTodo, setModal },\n) => (\n  <>\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              <i className={classNames('fas', {\n                'fa-check-square has-text-success': todo.completed,\n                'fa-exclamation-triangle has-text-danger': !todo.completed,\n              })}\n              />\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">{todo.title}</p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setSelectedTodo(todo);\n                  setModal(true);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n\n  </>\n);\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  onSettingTodo: React.Dispatch<React.SetStateAction<Todo[]>>,\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, onSettingTodo }) => {\n  const [query, setQuery] = useState('');\n  const lowerQuery = query.toLowerCase();\n\n  useEffect(() => {\n    onSettingTodo(todos\n      .filter(todo => todo.title.toLowerCase()\n        .includes(lowerQuery)));\n  }, [lowerQuery]);\n\n  const handleOnSelect = ({ target }: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (true) {\n      case (target.value === 'all'):\n        onSettingTodo(todos);\n        break;\n\n      case (target.value === 'completed'):\n        onSettingTodo(todos.filter(todo => todo.completed === true));\n        break;\n\n      case (target.value === 'active'):\n        onSettingTodo(todos.filter(todo => todo.completed === false));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleOnSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          onChange={({ target }) => setQuery(target.value)}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onSettingTodo(todos);\n              setQuery('');\n            }}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  selectedUser: User | null,\n  onSelectTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n  setSelectedUser: React.Dispatch<React.SetStateAction<User | null>>,\n  setModal: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  selectedUser,\n  onSelectTodo,\n  setSelectedUser,\n  setModal,\n}) => {\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n            <h2>Title</h2>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onSelectTodo(null);\n                setSelectedUser(null);\n                setModal(false);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n            {selectedUser && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${selectedUser.email}`}>\n                  {selectedUser.name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosToShow, setTodosToShow] = useState(todos);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [modal, setModal] = useState(false);\n\n  const showTodos = getTodos();\n\n  useEffect(() => {\n    showTodos.then((currentTodos) => {\n      setTodos(currentTodos);\n      setTodosToShow(currentTodos);\n    });\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(user => setSelectedUser(user));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                onSettingTodo={setTodosToShow}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todosToShow}\n                    setSelectedTodo={setSelectedTodo}\n                    setModal={setModal}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modal && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          selectedUser={selectedUser}\n          onSelectTodo={setSelectedTodo}\n          setSelectedUser={setSelectedUser}\n          setModal={setModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}